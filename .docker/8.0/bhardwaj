FROM php:8.0-apache
RUN set -ex; \
        \
        if command -v a2enmod; then \
                a2enmod rewrite ssl proxy proxy_http proxy_html vhost_alias xml2enc; \
        fi; \
        \
        savedAptMark="$(apt-mark showmanual)"; \
        \
        apt-get update; \
        apt-get install -y --no-install-recommends \
                libjpeg-dev \
                libpng-dev \
                libzip-dev \
                libmcrypt-dev \
                libpq-dev \
        ; \
        \

        docker-php-ext-configure gd --with-freetype --with-jpeg && \
        docker-php-ext-install -j "$(nproc)" \
                bz2 \
                bcmath \
                cgi-fcgi \
                exif \
                gd \
                imap \
#               imagick \
                intl \
                mailparse \
                mbstring \
                mysqli \
                opcache \
                openssl \
                pcntl \
                pdo \
                pdo_mysql \
                pdo_pgsql \
                sockets \
                sodium \
                tokenizer \
                xsl \
                zip \
        ; \
        \
# reset apt-mark's "manual" list so that "purge --auto-remove" will remove all build dependencies
        apt-mark auto '.*' > /dev/null; \
        apt-mark manual $savedAptMark; \
        ldd "$(php -r 'echo ini_get("extension_dir");')"/*.so \
                | awk '/=>/ { print $3 }' \
                | sort -u \
                | xargs -r dpkg-query -S \
                | cut -d: -f1 \
                | sort -u \
                | xargs -rt apt-mark manual; \
        \
        apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
        rm -rf /var/lib/apt/lists/*

COPY --from=mlocati/php-extension-installer /usr/bin/install-php-extensions /usr/bin/
RUN install-php-extensions gd \
                bz2 \
                bcmath \
                exif \
                gd \
                gmp \
                imap \
#               imagick \
                intl \
                mailparse \
                mbstring \
                mongodb \
                mysqli \
                opcache \
                openssl \
                pcntl \
                pdo \
                pdo_mysql \
                pdo_pgsql \
                sockets \
                sodium \
                tokenizer \
                xsl \
                zip


# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
RUN { \
                echo 'opcache.memory_consumption=128'; \
                echo 'opcache.interned_strings_buffer=8'; \
                echo 'opcache.max_accelerated_files=4000'; \
                echo 'opcache.revalidate_freq=1'; \
                echo 'opcache.fast_shutdown=1'; \
                echo 'opcache.enable_cli=1'; \
        } > /usr/local/etc/php/conf.d/opcache-recommended.ini


RUN apt-get update
RUN apt-get install -y \
                apt-utils \
                bash-completion \
                cron \
                curl \
                default-mysql-client \
                git \
                gnupg \
                gnupg1 \
                gnupg2 \
                libmemcached-dev \
                nano \
                sendmail \
                sendmail-bin \
                sudo \
                unzip \
                vim \
                wget \
                zip \
                sqlite3 

RUN curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash
RUN curl -o ~/.git-prompt.sh https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && chmod +x wp-cli.phar && mv wp-cli.phar /usr/local/bin/wp

# Install composer
RUN curl -sSL https://getcomposer.org/installer | php  && \
   mv composer.phar /usr/local/bin/composer &&\

   # Install PHPUnit
  curl -sSL https://phar.phpunit.de/phpunit.phar -o phpunit.phar && \
    chmod +x phpunit.phar && \
       mv phpunit.phar /usr/local/bin/phpunit && \

 # Install Drupal Console
   curl https://drupalconsole.com/installer -o /usr/local/bin/drupal && \
   chmod +x /usr/local/bin/drupal && \
    echo 'export PATH="$HOME/.composer/vendor/bin:$PATH"' >> /root/.bashrc
# Install drush g
RUN composer global require drush/drush:8.* 
#    composer global require "hirak/prestissimo:^0.3"
RUN ln -s $HOME/.composer/vendor/bin/drush /usr/local/bin/drush
RUN curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - \
        && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
RUN sudo apt-get install -y nodejs
ENV NVM_DIR=/root/.nvm
ENV NODE_VERSION=16.13.0
RUN . $HOME/.nvm/nvm.sh && nvm install $NODE_VERSION && nvm alias default $NODE_VERSION && nvm use default 
WORKDIR /var/www/html
